{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,uCAYA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,gBAC7BC,UAAWF,SAASC,cAAc,yBAClCE,QAASH,SAASC,cAAc,YAChCG,YAAaJ,SAASC,cAAc,cACpCI,OAAQL,SAASC,cAAc,YAGjCH,EAAKI,UAAUI,mBAAmB,YAAaC,EAAAC,WAC/C,MAAMC,EAAoB,IAAI,EAAAC,EAAAC,SACxBC,EAAuB,IAAIC,EAAAjB,GAAJ,CAAmB,cAyEhD,SAASkB,EAAoBC,GAC3B,OAAOA,EACJC,KACC,EAACC,aACCA,EAAYC,cACZA,EAAaC,KACbA,EAAIC,MACJA,EAAKC,MACLA,EAAKC,UACLA,EAASC,SACTA,KAEA,4DACyBN,sBACjBC,WAAuBC,0FAIjCZ,EAAAiB,wBACOJ,yDAGPb,EAAAkB,wBACOJ,yDAGPd,EAAAmB,2BACOH,yDAGPhB,EAAAoB,4BACOL,kDAKRM,KAAK,G,CAGV,SAASC,EAAcC,GACrBhC,EAAKK,QAAQG,mBAAmB,YAAawB,E,CAO/C,SAASC,IACPjC,EAAKM,YAAY4B,UAAUC,OAAO,S,CAGpC,SAASC,IACPpC,EAAKM,YAAY4B,UAAUG,IAAI,S,CAGjC,SAASC,IACP,MAAQC,OAAQC,GACdxC,EAAKK,QAAQoC,kBAAkBC,wBAEjCC,OAAOC,SAAS,CACdC,IAAkB,EAAbL,EACLM,SAAU,U,CAQd,SAASC,IACP/C,EAAKO,OAAO2B,UAAUG,IAAI,S,CA7I5BrC,EAAKC,KAAK+C,iBAAiB,UAG3BC,eAA4BC,GAC1BA,EAAIC,iBACJf,IAoIApC,EAAKO,OAAO2B,UAAUC,OAAO,UAlI7BxB,EAAkByC,YAClB,MAAMC,EAAQH,EAAII,OAAOC,SAASC,YAAYC,MAAMC,OACpD,IACA,GAAc,KAAVL,EAGF,MAFAM,EAAAC,OAAOC,QAAQ,8CACfd,IACM,IAAIe,MAAM,eAElBnD,EAAkB6C,YAAcH,EAoGhCrD,EAAKK,QAAQ0D,UAAY,GAjGvB,MAAMC,UAAEA,EAASC,KAAEA,SAAetD,EAAkBuD,cAOpD,GALAvD,EAAkBwD,cAAgBC,KAAKC,KAAKL,EAAY,IACpDrD,EAAkB2D,qBACpBrC,IAGgB,IAAd+B,EAKF,MAJAL,EAAAC,OAAOC,QACL,4EAEFd,IACM,IAAIe,MACR,4EAIJH,EAAAC,OAAOW,QAAQ,oBAAoBP,aAGnCjC,EAFef,EAAoBiD,IAGnCnD,EAAqB0D,UACrBzB,IACAT,G,CACA,MAAOmC,GACPC,QAAQC,IAAIF,E,KA1ChBzE,EAAKM,YAAY0C,iBAAiB,SA8ClCC,iBACEb,IAiGApC,EAAKO,OAAO2B,UAAUC,OAAO,UAC7BnC,EAAKO,OAAO2B,UAAUG,IAAI,iBAhG1B1B,EAAkBiE,eAElB,IACE,MAAMX,KAAEA,SAAetD,EAAkBuD,cAGzCnC,EAFef,EAAoBiD,IAGnCnD,EAAqB0D,UA6FvBxE,EAAKO,OAAO2B,UAAUG,IAAI,UAC1BrC,EAAKO,OAAO2B,UAAUC,OAAO,iBA5F3BF,IACAK,IAEK3B,EAAkB2D,sBACrBlC,IACAuB,EAAAC,OAAOiB,KAAK,8D,CAEd,MAAOJ,GACPC,QAAQC,IAAIF,E","sources":["src/01-index.js"],"sourcesContent":["import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport PixabayApiService from './js/pixabay-api-service';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport {\n  svgLikes,\n  svgComments,\n  svgViews,\n  svgDownloads,\n  svgSearch,\n} from './js/svg-icons';\n\nconst refs = {\n  form: document.querySelector('#search-form'),\n  submitBtn: document.querySelector('#search-form > button'),\n  gallery: document.querySelector('.gallery'),\n  loadMoreBtn: document.querySelector('.load-more'),\n  loader: document.querySelector('.loader'),\n};\n\nrefs.submitBtn.insertAdjacentHTML('beforeend', svgSearch);\nconst pixabayApiService = new PixabayApiService();\nconst simpleLigtboxGallery = new SimpleLightbox('.gallery a');\n\nrefs.form.addEventListener('submit', onFormSubmit);\nrefs.loadMoreBtn.addEventListener('click', onLoadMoreBtnClick);\n\nasync function onFormSubmit(evt) {\n  evt.preventDefault();\n  hideLoadMoreBtn();\n  showLoader();\n  pixabayApiService.resetPage();\n  const query = evt.target.elements.searchQuery.value.trim();\n  try {\n  if (query === '') {\n    Notify.warning('The input is empty. Please type something.');\n    hideLoader();\n    throw new Error('empty input');\n  }\n  pixabayApiService.searchQuery = query;\n  clearGallery();\n\n    const { totalHits, hits } = await pixabayApiService.fetchImages();\n\n    pixabayApiService.amountOfPages = Math.ceil(totalHits / 40);\n    if (pixabayApiService.canLoadMoreImages()) {\n      showLoadMoreBtn();\n    }\n\n    if (totalHits === 0) {\n      Notify.warning(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n      hideLoader();\n      throw new Error(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n    }\n\n    Notify.success(`Hooray! We found ${totalHits} images.`);\n    const markup = createGalleryMarkup(hits);\n\n    renderGallery(markup);\n    simpleLigtboxGallery.refresh();\n    hideLoader();\n    addSmoothScroll();\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nasync function onLoadMoreBtnClick() {\n  hideLoadMoreBtn();\n  showSmallLoader();\n  pixabayApiService.increasePage();\n\n  try {\n    const { hits } = await pixabayApiService.fetchImages();\n    const markup = createGalleryMarkup(hits);\n\n    renderGallery(markup);\n    simpleLigtboxGallery.refresh();\n    hideSmallLoader();\n    showLoadMoreBtn();\n    addSmoothScroll();\n\n    if (!pixabayApiService.canLoadMoreImages()) {\n      hideLoadMoreBtn();\n      Notify.info(\"We're sorry, but you've reached the end of search results.\");\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction createGalleryMarkup(list) {\n  return list\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        downloads,\n        comments,\n      }) =>\n        `<div class=\"photo-card\">\n    <a class='card-link' href=\"${webformatURL}\">\n    <img src=\"${largeImageURL}\" alt=\"${tags}\" loading=\"lazy\" />\n    </a>\n    <div class=\"info\">\n    <p class=\"info-item\">\n    ${svgLikes}\n    <span> ${likes} </span>  \n    </p>\n    <p class=\"info-item\">\n    ${svgViews}\n    <span> ${views} </span>  \n    </p>\n    <p class=\"info-item\">\n    ${svgComments}\n    <span> ${comments} </span>  \n    </p>\n    <p class=\"info-item\">\n    ${svgDownloads}\n    <span> ${downloads} </span>  \n    </p>\n    </div>\n    </div>`\n    )\n    .join('');\n}\n\nfunction renderGallery(markup) {\n  refs.gallery.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction clearGallery() {\n  refs.gallery.innerHTML = '';\n}\n\nfunction showLoadMoreBtn() {\n  refs.loadMoreBtn.classList.remove('hidden');\n}\n\nfunction hideLoadMoreBtn() {\n  refs.loadMoreBtn.classList.add('hidden');\n}\n\nfunction addSmoothScroll() {\n  const { height: cardHeight } =\n    refs.gallery.firstElementChild.getBoundingClientRect();\n\n  window.scrollBy({\n    top: cardHeight * 2,\n    behavior: 'smooth',\n  });\n}\n\nfunction showLoader() {\n  refs.loader.classList.remove('hidden');\n}\n\nfunction hideLoader() {\n  refs.loader.classList.add('hidden');\n}\n\nfunction showSmallLoader() {\n  refs.loader.classList.remove('hidden');\n  refs.loader.classList.add('loader--small');\n}\n\nfunction hideSmallLoader() {\n  refs.loader.classList.add('hidden');\n  refs.loader.classList.remove('loader--small');\n}\n"],"names":["$fZKcF","parcelRequire","$75c9065a99106def$var$refs","form","document","querySelector","submitBtn","gallery","loadMoreBtn","loader","insertAdjacentHTML","$3vGNy","svgSearch","$75c9065a99106def$var$pixabayApiService","$jTkUK","default","$75c9065a99106def$var$simpleLigtboxGallery","$parcel$interopDefault","$75c9065a99106def$var$createGalleryMarkup","list","map","webformatURL","largeImageURL","tags","likes","views","downloads","comments","svgLikes","svgViews","svgComments","svgDownloads","join","$75c9065a99106def$var$renderGallery","markup","$75c9065a99106def$var$showLoadMoreBtn","classList","remove","$75c9065a99106def$var$hideLoadMoreBtn","add","$75c9065a99106def$var$addSmoothScroll","height","cardHeight","firstElementChild","getBoundingClientRect","window","scrollBy","top","behavior","$75c9065a99106def$var$hideLoader","addEventListener","async","evt","preventDefault","resetPage","query","target","elements","searchQuery","value","trim","$iQIUW","Notify","warning","Error","innerHTML","totalHits","hits","fetchImages","amountOfPages","Math","ceil","canLoadMoreImages","success","refresh","err","console","log","increasePage","info"],"version":3,"file":"01-with-load-more-btn.83ce956b.js.map"}